Comments:
----------

General remarks:

* Well done!  Only some minor things to fix..

* In prop_checkVal you will almost never satisfy the guard condition
as it is too unlikely.  To fix this you could, eg., use "`mod` 9" to
get good test values.  Same in prop_relateFuncs.

* In solve', you don't need
| null candidates_ = Nothing
as you have the "++ [Nothing]".

* I would use isSolved instead of "length (blanks a) == 0" in
isSolutionOf.

What you need to do to be accepted:

* In prop_checkVal you will almost never satisfy the guard condition
as it is too unlikely.  To fix this you could, eg., use "`mod` 9" to
get good test values.  Same in prop_relateFuncs.

* prop_SolveSound crashes:
*Sudoku Control.Applicative> quickCheck prop_SolveSound
*** Failed! Exception: 'Maybe.fromJust: Nothing' (after 1 test):
Sudoku {rows = [[Just 9,Just 9,Nothing,Nothing,Just 3,Nothing,Just 5,Just 2,Just 5],[Nothing,Just 5,Nothing,Just 4,Nothing,Just 8,Nothing,Just 1,Nothing],[Just 2,Just 8,Nothing,Nothing,Just 6,Nothing,Nothing,Just 9,Nothing],[Nothing,Nothing,Just 8,Just 7,Nothing,Nothing,Just 3,Nothing,Just 1],[Nothing,Just 7,Just 2,Just 4,Nothing,Just 6,Just 6,Nothing,Nothing],[Just 5,Just 2,Just 1,Nothing,Just 4,Just 9,Just 9,Nothing,Just 5],[Nothing,Nothing,Nothing,Just 6,Just 7,Nothing,Just 3,Just 1,Just 9],[Just 9,Nothing,Just 1,Just 8,Nothing,Just 5,Just 7,Just 6,Nothing],[Just 8,Just 1,Just 4,Nothing,Just 9,Nothing,Nothing,Nothing,Nothing]]}

----------